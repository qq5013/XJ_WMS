<?xml version="1.0" encoding="utf-8" ?>
<SqlCommand>
  <!--采购订单 -->
  <Command ID="SelectScheduleInnerSub">
    <CommandString>
      select distinct Main.* from View_WMS_Schedule Main
      inner join WMS_SCHEDULESUB Sub on main.Flag=sub.Flag and main.ScheduleNo=sub.ScheduleNo
      where {0}
      ORDER BY BillDate DESC, Main.ScheduleNo DESC
    </CommandString>
  </Command>
  
  <Command ID="SelectSchedule">
    <CommandString>
      select * from View_WMS_Schedule
      where {0}
      ORDER BY BillDate DESC, ScheduleNo DESC
    </CommandString>
  </Command>
  <Command ID="DeleteSchedule">
    <CommandString>
      delete from WMS_SCHEDULE WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertSchedule">
    <CommandString>
      insert into WMS_SCHEDULE(Flag, ScheduleNo, BillDate, SourceNo, FactoryOrderNo, FactoryID, Memo, Creator, CreateDate, Updater, UpdateDate,TechRequery,OrderFunction,PackRequery,OrderParts)
      values(@Flag, @ScheduleNo, @BillDate, @SourceNo, @FactoryOrderNo, @FactoryID, @Memo, @Creator, getdate(), @Updater, getdate(),@TechRequery,@OrderFunction,@PackRequery,@OrderParts)
    </CommandString>
  </Command>
  <Command ID="UpdateSchedule">
    <CommandString>
      Update WMS_SCHEDULE Set BillDate=@BillDate,SourceNo=@SourceNo,FactoryOrderNo=@FactoryOrderNo,FactoryID=@FactoryID,Memo=@Memo,
      Updater=@Updater,UpdateDate=getdate(),TechRequery=@TechRequery,OrderFunction=@OrderFunction,PackRequery=@PackRequery,OrderParts=@OrderParts where {0}
    </CommandString>
  </Command>
  <Command ID="UpdateScheduleCheck">
    <CommandString>
      Update WMS_SCHEDULE Set CheckUser=@CheckUser, CheckDate={1} where {0}
    </CommandString>
  </Command>
  <Command ID="UpdateScheduleReCheck">
    <CommandString>
      Update WMS_SCHEDULE Set ReCheckUser=@ReCheckUser, ReCheckDate={1} where {0}
    </CommandString>
  </Command>
  <Command ID="UpdateScheduleClose">
    <CommandString>
      Update WMS_SCHEDULE Set Closer=@Closer, CloseDate={1} where {0}
    </CommandString>
  </Command>
  <Command ID="UpdateScheduleBarCodeClose">
    <CommandString>
      update WMS_Barcode set State={1} from WMS_Barcode barcode inner join WMS_SCHEDULESUB sub on barcode.Flag=sub.Flag
      and barcode.ScheduleNo=sub.ScheduleNo and sub.SubID=barcode.RowID
      where  {0}
    </CommandString>
  </Command>


  <Command ID="SelectScheduleSub">
    <CommandString>
      select * from View_WMS_SCHEDULESUB
      where {0}
    </CommandString>
  </Command>
  <Command ID="DeleteScheduleSub">
    <CommandString>
      delete from WMS_SCHEDULESUB WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertScheduleSub">
    <CommandString>
      INSERT INTO WMS_SCHEDULESUB(Flag,ScheduleNo,RowID,SubID,ProductID,ColorID,PlanQty,StarNo,EndNo,PlanDate,RealQty,Price,Amount)
      values(@Flag,@ScheduleNo,@RowID,@SubID,@ProductID,@ColorID,@PlanQty,@StarNo,@EndNo,@PlanDate,@RealQty,@Price,@Amount)
    </CommandString>
  </Command>

  <Command ID="InsertScheduleSubNew">
    <CommandString>
      INSERT INTO WMS_SCHEDULESUB(Flag,ScheduleNo,RowID,SubID,ProductID,ColorID,PlanQty,StarNo,EndNo,PlanDate,RealQty,Price,Amount,Memo,SourceNo, OrderNo, OrderDate,
      PlanDeliverDate, ReplyDate, ChangeDate, CheckDate, FactDate, ReportDate, QualityDate, Result, IsComplete, IsPlanComplete, PlanDeliverQty, PlanDeliverAccount,
      PlanDeliverNoQty, PlanDeliverNoAccount, PlanCompleteRate, DeliverQty, DeliverAccount, DeliverNoQty, DeliverNoAccount, CompleteRate, NoCompleteMemo)
      values(@Flag,@ScheduleNo,@RowID,@SubID,@ProductID,@ColorID,@PlanQty,@StarNo,@EndNo,@PlanDate,@RealQty,@Price,@Amount,@Memo,@SourceNo,@OrderNo,@OrderDate,
      @PlanDeliverDate,@ReplyDate,@ChangeDate,@CheckDate,@FactDate,@ReportDate,@QualityDate,@Result,@IsComplete,@IsPlanComplete,@PlanDeliverQty,@PlanDeliverAccount,
      @PlanDeliverNoQty,@PlanDeliverNoAccount,@PlanCompleteRate,@DeliverQty,@DeliverAccount,@DeliverNoQty,@DeliverNoAccount,@CompleteRate,@NoCompleteMemo)
    </CommandString>
  </Command>
  
  <Command ID="SP_CreateScheduleBarCode">
    <CommandString>
      SP_CreateBarCode
    </CommandString>
  </Command>
  <Command ID="DeleteScheduleBarCode">
    <CommandString>
      delete from WMS_Barcode WHERE Flag=@Flag and ScheduleNo=@ScheduleNo
    </CommandString>
  </Command>

  
  <!--入库单-->
  <Command ID="SelectInStockInnerSub">
    <CommandString>
      select distinct main.* from View_WMS_InStock Main
      inner join WMS_StockSub Sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      where {0}
      ORDER BY main.BillDate DESC, main.BillID DESC
    </CommandString>
  </Command>
  
  <Command ID="SelectInStock">
    <CommandString>
      select * from View_WMS_InStock
      where {0}
      ORDER BY BillDate DESC, BillID DESC
    </CommandString>
  </Command>
  <Command ID="DeleteInStock">
    <CommandString>
      delete from WMS_Stock WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertInStock">
    <CommandString>
      insert into WMS_Stock(BillID, Flag, BillDate, ScheduleNo, Memo, Creator, CreateDate, Updater, UpdateDate)
      values(@BillID, @Flag, @BillDate, @ScheduleNo, @Memo, @Creator, getdate(), @Updater, getdate())
    </CommandString>
  </Command>
  <Command ID="UpdateInStock">
    <CommandString>
      Update WMS_Stock Set TaskChecker=@TaskChecker, TaskID=@TaskID, Memo=@Memo,Updater=@Updater,UpdateDate=getdate() where {0}
    </CommandString>
  </Command>
  <Command ID="UpdateInStockCheck">
    <CommandString>
      sp_CheckInStock
    </CommandString>
  </Command>
  
  <Command ID="SelectInStockSub">
    <CommandString>
      select sub.*,CMD_COLOR.COLOR_NAME  as ColName,CMD_PRODUCT.Product_Name as ProdName,CMD_PRODUCT.PRODUCT_MODEL as ProdModel,CMD_PRODUCT.PRODUCT_FMODEL as ProdFModel
      from WMS_StockSub sub
      left join V4_CMD_PRODUCT CMD_PRODUCT on sub.ProductID=CMD_PRODUCT.Product_Code
      left join CMD_COLOR on sub.ColorID=CMD_COLOR.COLOR_CODE and CMD_COLOR.PRODUCT_CODE=sub.ProductID
      where {0}
    </CommandString>
  </Command>

  <Command ID="SelectInStockReport">
    <CommandString>
      select main.BillDate, main.BillID,main.ScheduleNo,main.Memo,main.Creator,main.CreateDate,main.Checker,main.CheckDate, main.FactoryName,main.FactoryOrderNo,
      sub.InStockQty,CMD_COLOR.COLOR_NAME  as ColName,CMD_PRODUCT.Product_Name as ProdName,bom.ProductNo,bom.Unit,CMD_PRODUCT.PRODUCT_MODEL as ProdModel,CMD_PRODUCT.PRODUCT_FMODEL as ProdFModel
      from WMS_StockSub sub
      inner join View_WMS_InStock Main on main.Flag=sub.Flag and main.BillID=sub.BillID
      left join V4_CMD_PRODUCT CMD_PRODUCT on sub.ProductID=CMD_PRODUCT.Product_Code
      left join CMD_COLOR on sub.ColorID=CMD_COLOR.COLOR_CODE and CMD_COLOR.PRODUCT_CODE=sub.ProductID
      left join CMD_ProductBOM Bom on bom.Product_Code=sub.ProductID and bom.ColorID=sub.ColorID
      where main.Flag=1 and main.BillID=@BillID
    </CommandString>
  </Command>
  
  <Command ID="DeleteInStockSub">
    <CommandString>
      delete from WMS_StockSub WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertInStockSub">
    <CommandString>
      INSERT INTO WMS_StockSub(BillID, RowID, Flag, ProductID, ColorID, InStockQty, Source)
      values(@BillID,@RowID,@Flag,@ProductID,@ColorID,@InStockQty,@Source)
    </CommandString>
  </Command>

  <Command ID="SelectInStockDetail">
    <CommandString>
      select Detail.*,CMD_COLOR.COLOR_NAME  as ColName,CMD_PRODUCT.Product_Name as ProdName
      from WMS_StockDetail Detail
      left join CMD_PRODUCT on Detail.ProductID=CMD_PRODUCT.Product_Code
      left join CMD_COLOR on Detail.ColorID=CMD_COLOR.COLOR_CODE and CMD_COLOR.PRODUCT_CODE=substring(Detail.ProductID,1,5)
      where {0}
    </CommandString>
  </Command>
  <Command ID="DeleteInStockDetail">
    <CommandString>
      delete from WMS_StockDetail WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertInStockDetail">
    <CommandString>
      INSERT INTO WMS_StockDetail(BillID, RowID, Flag, BarCode, ProductID, ColorID)
      values(@BillID, @RowID, @Flag, @BarCode, @ProductID, @ColorID)
    </CommandString>
  </Command>


  <!--获取产品剩余库存，扣除未出计划单的数量-->
  <Command ID="SelectScheduleProductRemainQty">
    <CommandString>
      select product.*,Qty-ISNULL( tmp.UnStockQty,0) as RemainQty from
      (select ProductID,ColorID,SUM(qty) as qty from (
      select ProductID,ColorID,SUM(InStockQty) as qty  from WMS_Stock main
      inner join WMS_StockSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      where main.Checker!='' and ProductID=@ProductID and ColorID=@ColorID and main.Flag=1
      group by ProductID,ColorID
      union all
      select ProductID,ColorID,SUM(-InStockQty) as qty  from WMS_Stock main
      inner join WMS_StockSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      where (main.Checker!='' and main.Canceler='') and ProductID=@ProductID and ColorID=@ColorID and main.Flag=2
      group by ProductID,ColorID
      union all
      select ProductID,ColorID,-SUM(ScanQty) as Qty from WMS_MigrationSub sub inner join WMS_Migration main on main.Flag=sub.Flag and main.BillID=sub.BillID
      where  sub.Flag=1 and ProductID=@ProductID and ColorID=@ColorID
      group by  ProductID,ColorID
      ) tmp
      group by ProductID,ColorID ) product
      left join (select productid,colorid, SUM(planqty-realqty) as UnStockQty from view_WMS_DeliverScheduleSub where Flag=1 and ScheduleNo!=@ScheduleNo
      and planqty-realqty>0  and ProductID=@ProductID and ColorID=@ColorID
      group by ProductID,ColorID )tmp
      on product.ProductID=tmp.ProductID and product.ColorID=tmp.ColorID
      where product.ProductID=@ProductID and product.ColorID=@ColorID
    </CommandString>
  </Command>
  


  <!--销售订单 -->
  <Command ID="SelectDeliverScheduleInnerSub">
    <CommandString>
      select  distinct main.* from View_WMS_DeliverSchedule main
      inner join View_WMS_DeliverScheduleSub sub on main.Flag=sub.Flag and main.ScheduleNo=sub.ScheduleNo
      where {0}
      ORDER BY BillDate DESC, main.ScheduleNo DESC
    </CommandString>
  </Command>
  <Command ID="SelectDeliverSchedule">
    <CommandString>
      select * from View_WMS_DeliverSchedule
      where {0}
      ORDER BY BillDate DESC, ScheduleNo DESC
    </CommandString>
  </Command>
  <Command ID="DeleteDeliverSchedule">
    <CommandString>
      delete from WMS_DeliverSchedule WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertDeliverSchedule">
    <CommandString>
      insert into WMS_DeliverSchedule(Flag,ScheduleNo,BillDate,SourceNo,DriverType,CustomerID,ParCustomerID,CustPerson,CustPhone,LinkPerson,LinkPhone,LinkAddress,Memo,Creator,CreateDate,Updater,UpdateDate,Transport,AreaSation)
      values(@Flag,@ScheduleNo,@BillDate,@SourceNo,@DriverType,@CustomerID,@ParCustomerID,@CustPerson,@CustPhone,@LinkPerson,@LinkPhone,@LinkAddress,@Memo,@Creator,getdate(),@Updater,getdate(),@Transport,@AreaSation)
    </CommandString>
  </Command>
  <Command ID="UpdateDeliverSchedule">
    <CommandString>
      Update WMS_DeliverSchedule Set BillDate=@BillDate,SourceNo=@SourceNo,DriverType=@DriverType,CustomerID=@CustomerID,ParCustomerID=@ParCustomerID,CustPerson=@CustPerson,CustPhone=@CustPhone,LinkPerson=@LinkPerson,LinkPhone=@LinkPhone,LinkAddress=@LinkAddress,Memo=@Memo,Updater=@Updater,UpdateDate=getdate(),Transport=@Transport,AreaSation=@AreaSation where {0}
    </CommandString>
  </Command>
  <Command ID="UpdateDeliverScheduleCheck">
    <CommandString>
      Update WMS_DeliverSchedule Set CheckUser=@CheckUser, CheckDate={1} where {0}
    </CommandString>
  </Command>

  


  <Command ID="SelectDeliverScheduleSub">
    <CommandString>
      select * from View_WMS_DeliverScheduleSub
      where {0}
    </CommandString>
  </Command>
  <Command ID="DeleteDeliverScheduleSub">
    <CommandString>
      delete from WMS_DeliverSCHEDULESUB WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertDeliverScheduleSub">
    <CommandString>
      INSERT INTO WMS_DeliverSCHEDULESUB(Flag,ScheduleNo,RowID,SubID,ProductID,ColorID,PlanQty,PlanDate,RealQty,Price,Amount,Memo)
      values(@Flag,@ScheduleNo,@RowID,@SubID,@ProductID,@ColorID,@PlanQty,@PlanDate,@RealQty,@Price,@Amount,@Memo)
    </CommandString>
  </Command>
  <!--获取未出货的计划单明细-->
  <Command ID="SelectNoDeliverScheduleSub">
    <CommandString>
      select sub.*,isnull(tmp.StockQty,0) as StockQty from View_WMS_DeliverScheduleSub sub
      left join (select PrdQty.ProductID,PrdQty.ColorID,PrdQty.StockQty-ISNULL(tmp2.UnStockQty,0) as StockQty  from (select distinct ProductID,ColorID,StockQty from View_ProductQty) PrdQty
      left join (select ProductID,ColorID,isnull(SUM(UnStockQty),0) as UnStockQty from View_ProductQty where BillID!=@BillID or BillID is null group by ProductID,ColorID ) tmp2 on PrdQty.ProductID=tmp2.ProductID and PrdQty.ColorID=tmp2.ColorID) tmp
      on sub.ProductID=tmp.Productid and sub.ColorID=tmp.ColorID
      where NotOutStockQty>0 and {0}
    </CommandString>
  </Command>
  <Command ID="SelectNoDeliverScheduleSubByProduct">
    <CommandString>
      SELECT sub.PlanQty - ISNULL(tmp.InStockQty, 0) AS NotOutStockQty
      FROM         dbo.WMS_DeliverScheduleSub AS sub
      LEFT OUTER JOIN  (SELECT     main.ScheduleNo, StockSub.ProductID, StockSub.ColorID, SUM(StockSub.InStockQty) AS InStockQty
      FROM          dbo.WMS_StockSub AS StockSub INNER JOIN
      dbo.WMS_Stock AS main ON StockSub.Flag = main.Flag AND StockSub.BillID = main.BillID
      WHERE      (StockSub.Flag = 2) AND (main.Canceler = '') and main.BillID!=@BillID and StockSub.ProductID=@ProductID and StockSub.ColorID=@ColorID
      GROUP BY main.ScheduleNo, StockSub.ProductID, StockSub.ColorID) AS tmp ON
      sub.ScheduleNo = tmp.ScheduleNo AND sub.ProductID = tmp.ProductID AND
      sub.ColorID = tmp.ColorID
      where sub.ScheduleNo=@ScheduleNo and sub.ProductID=@ProductID and sub.ColorID=@ColorID
    </CommandString>
  </Command>
 


  <!--获取未出货的计划单-->
  <Command ID="SelectNoDeliverSchedule">
    <CommandString>
      select * from View_WMS_DeliverSchedule main
      where exists(select 1 from View_WMS_DeliverScheduleSub where Flag=main.flag and ScheduleNo=main.ScheduleNo and NotOutStockQty>0)
      and ScheduleNo not in (select SourceNo from WMS_SCHEDULE where Flag=2 ) and CheckUser!='' and {0}
      ORDER BY BillDate DESC, ScheduleNo DESC
    </CommandString>
  </Command>
  
  
  

  <!--获取产品剩余库存，扣除出库单的数量-->
  <Command ID="SelectOutStockProductRemainQty">
    <CommandString>
      select product.*,product.qty-isnull(tmp.UnStockQty,0) as RemainQty from (
      select ProductID,ColorID,SUM(qty) as qty from (
      select ProductID,ColorID,SUM(InStockQty) as qty  from WMS_Stock main
      inner join WMS_StockSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      where main.Checker!='' and ProductID=@ProductID and ColorID=@ColorID and main.Flag=1
      group by ProductID,ColorID
      union all
      select ProductID,ColorID,SUM(-InStockQty) as qty  from WMS_Stock main
      inner join WMS_StockSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      where (main.Checker!='' and main.Canceler='') and ProductID=@ProductID and ColorID=@ColorID and main.Flag=2
      group by ProductID,ColorID
      union all
      select ProductID,ColorID,-SUM(ScanQty) as Qty from WMS_MigrationSub sub inner join WMS_Migration main on main.Flag=sub.Flag and main.BillID=sub.BillID
      where  sub.Flag=1 and ProductID=@ProductID and ColorID=@ColorID
      group by  ProductID,ColorID
      ) tmp
      group by ProductID,ColorID ) product
      left join (
      select productid,colorid,SUM(InStockQty) as UnStockQty from WMS_StockSub inner join WMS_Stock on WMS_StockSub.Flag=WMS_Stock.Flag and WMS_Stock.BillID=WMS_StockSub.BillID where WMS_StockSub.Flag =2 and WMS_StockSub.BillID!=@BillID and WMS_Stock.Checker='' and WMS_Stock.Canceler=''  and ProductID=@ProductID and ColorID=@ColorID  group by ProductID,ColorID )
      tmp on product.ProductID=tmp.ProductID and product.ColorID=tmp.ColorID
      where product.ProductID=@ProductID and product.ColorID=@ColorID
    </CommandString>
  </Command>
  
  <!--出库单-->
  <Command ID="SelectOutStockInnerSub">
    <CommandString>
      select distinct main.* from View_WMS_OutStock main
      inner join WMS_StockSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      where {0}
      ORDER BY BillDate DESC, main.BillID DESC
    </CommandString>
  </Command>
  
  <Command ID="SelectOutStock">
    <CommandString>
      select * from View_WMS_OutStock
      where {0}
      ORDER BY BillDate DESC, BillID DESC
    </CommandString>
  </Command>
  <Command ID="DeleteOutStock">
    <CommandString>
      delete from WMS_Stock WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertOutStock">
    <CommandString>
      insert into WMS_Stock(BillID, Flag, BillDate, ScheduleNo, Memo, Creator, CreateDate, Updater, UpdateDate,DriverType,PlanDate)
      values(@BillID, @Flag, @BillDate, @ScheduleNo, @Memo, @Creator, getdate(), @Updater, getdate(),@DriverType,@PlanDate)
    </CommandString>
  </Command>
  <Command ID="UpdateOutStock">
    <CommandString>
      Update WMS_Stock Set BillID=@BillID,BillDate=@BillDate,ScheduleNo=@ScheduleNo,Memo=@Memo,
      Updater=@Updater,UpdateDate=getdate(),DriverType=@DriverType,PlanDate=@PlanDate where {0}
    </CommandString>
  </Command>
  <!--出库作业-->
  <Command ID="SP_OutStockTask">
    <CommandString>
      sp_OutStockTask
    </CommandString>
  </Command>
  <!--出库作业取消-->
  <Command ID="SPOutStockUnTask">
    <CommandString>
      sp_OutStockUnTask
    </CommandString>
  </Command>
  <!--出库单作业审核-->
  <Command ID="UpdateOutStockTaskCheck">
    <CommandString>
      Update WMS_Stock Set TaskChecker=@TaskChecker, TaskCheckDate={1},State={2} where {0}
    </CommandString>
  </Command>

  <Command ID="SelectOutStockSub">
    <CommandString>
      select sub.*, tmp.StockQty  as StockQty, color.COLOR_NAME  as ColorName,product.PRODUCT_NAME as ProductName,product.PRODUCT_MODEL as  ProductModel,product.PRODUCT_FMODEL as ProductFModel,product.PACK_QTY,product.ProductVolume,product.SubCount
      from WMS_StockSub sub
      inner JOIN dbo.CMD_COLOR AS color ON sub.ColorID = color.COLOR_CODE AND color.PRODUCT_CODE = sub.ProductID
      inner JOIN dbo.V4_CMD_PRODUCT AS product ON sub.ProductID = product.Product_Code
      left join (select PrdQty.ProductID,PrdQty.ColorID,PrdQty.StockQty-ISNULL(tmp2.UnStockQty,0) as StockQty  from (select distinct ProductID,ColorID,StockQty from View_ProductQty) PrdQty
      left join (select ProductID,ColorID,isnull(SUM(UnStockQty),0) as UnStockQty from View_ProductQty where BillID!=@BillID or BillID is null group by ProductID,ColorID ) tmp2 on PrdQty.ProductID=tmp2.ProductID and PrdQty.ColorID=tmp2.ColorID) tmp
      on sub.ProductID=tmp.ProductID and sub.ColorID=tmp.ColorID
      where {0}
    </CommandString>
  </Command>
  <Command ID="SelectOutStockSubReport">
    <CommandString>
      select  main.BillDate, main.BillID,main.ScheduleNo,main.Memo,main.Creator,main.CreateDate,main.Checker,main.CheckDate,main.CustName,main.LinkAddress,main.LinkPerson,main.LinkPhone,
      sub.InStockQty,color.COLOR_NAME  as ColName,product.Product_Name as ProdName,bom.ProductNo,bom.Unit,product.PRODUCT_MODEL as ProdModel,product.PRODUCT_FMODEL as ProdFModel,product.SubCount,product.PACK_QTY,product.ProductVolume
      from WMS_StockSub sub
      inner join View_WMS_OutStock Main on main.Flag=sub.Flag and main.BillID=sub.BillID
      LEFT OUTER JOIN dbo.CMD_COLOR AS color ON sub.ColorID = color.COLOR_CODE AND color.PRODUCT_CODE = sub.ProductID
      LEFT OUTER JOIN dbo.V4_CMD_PRODUCT AS product ON sub.ProductID = product.Product_Code
      left join CMD_ProductBOM Bom on bom.Product_Code=sub.ProductID and bom.ColorID=sub.ColorID
      where main.Flag=2 and main.BillID=@BillID

    </CommandString>
  </Command>
  <Command ID="DeleteOutStockSub">
    <CommandString>
      delete from WMS_StockSub WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertOutStockSub">
    <CommandString>
      INSERT INTO WMS_StockSub(BillID, RowID, Flag, ProductID, ColorID, InStockQty,IsCode,ScanQty,Volume)
      values(@BillID,@RowID,@Flag,@ProductID,@ColorID,@InStockQty,@IsCode,@ScanQty,@Volume)
    </CommandString>
  </Command>

  <Command ID="SelectOutStockDetail">
    <CommandString>
      select Detail.*,CMD_COLOR.COLOR_NAME  as ColName,CMD_PRODUCT.Product_Name as ProdName
      from WMS_StockDetail Detail
      left join CMD_PRODUCT on Detail.ProductID=CMD_PRODUCT.Product_Code
      left join CMD_COLOR on Detail.ColorID=CMD_COLOR.COLOR_CODE and CMD_COLOR.Product_Code = SUBSTRING(Detail.ProductID, 1, 5)
      where {0}
    </CommandString>
  </Command>
  <Command ID="SelectOutStockDetailReport">
    <CommandString>
      select Detail.*,CMD_COLOR.COLOR_NAME  as ColName,CMD_PRODUCT.Product_Name as ProdName,CMD_PRODUCT.PRODUCT_MODEL,SUBSTRING(Detail.ProductID, 1, 5) as ProdID
      from WMS_StockDetail Detail
      left join CMD_PRODUCT on Detail.ProductID=CMD_PRODUCT.Product_Code
      left join CMD_COLOR on Detail.ColorID=CMD_COLOR.COLOR_CODE and CMD_COLOR.Product_Code = SUBSTRING(Detail.ProductID, 1, 5)
      where Detail.Flag=2 and BillID=@BillID
      order by SUBSTRING(Detail.ProductID, 1, 5),ColorID,BarCode
    </CommandString>
  </Command>
  <Command ID="DeleteOutStockDetail">
    <CommandString>
      delete from WMS_StockDetail WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertOutStockDetail">
    <CommandString>
      INSERT INTO WMS_StockDetail(BillID, RowID, Flag, BarCode, ProductID, ColorID)
      values(@BillID, @RowID, @Flag, @BarCode, @ProductID, @ColorID)
    </CommandString>
  </Command>
  <!--出库备货清单-->
  <Command ID="SelectTaskTemp">
    <CommandString>
      select *from (
      select area.AREA_CODE, AREA_NAME,shelf.SHELF_CODE, SHELF_NAME,CELL_NAME,product.PRODUCT_MODEL,PRODUCT.PRODUCT_NAME,COLOR_NAME, PalletCode,task.Quantity as Qty,CELL_CODE,  ProductID,task.ColorID,task.TaskID,task.TaskNo
      from WCS_TASK task
      left join CMD_WH_CELL CELL on task.CellCode=cell.CELL_CODE
      left join CMD_WH_SHELF Shelf on cell.SHELF_CODE=shelf.SHELF_CODE
      left join CMD_WH_AREA Area on AREA.AREA_CODE=cell.AREA_CODE
      left join V4_CMD_PRODUCT Product on Product.PRODUCT_CODE=task.ProductID
      left join CMD_COLOR Color on color.COLOR_CODE=task.ColorID and color.PRODUCT_CODE=task.ProductID
      where State=0  and task.PalletCode=''   and TaskType=2
      union all
      select area.AREA_CODE, AREA_NAME,shelf.SHELF_CODE, SHELF_NAME,CELL_NAME,product.PRODUCT_MODEL,PRODUCT.PRODUCT_PartsName as PRODUCT_NAME,COLOR_NAME, PalletCode,SUM(task.Quantity) as Qty,CELL_CODE,  ProductID,task.ColorID,task.TaskID,task.TaskNo
      from WCS_TASK task
      left join CMD_WH_CELL CELL on task.CellCode=cell.CELL_CODE
      left join CMD_WH_SHELF Shelf on cell.SHELF_CODE=shelf.SHELF_CODE
      left join CMD_WH_AREA Area on AREA.AREA_CODE=cell.AREA_CODE
      left join CMD_PRODUCT Product on Product.PRODUCT_CODE=task.ProductID
      left join CMD_COLOR Color on color.COLOR_CODE=task.ColorID and color.PRODUCT_CODE=SUBSTRING(task.ProductID,1,5)
      where State=0 and task.PalletCode!='' and TaskType=2
      group by area.AREA_CODE, AREA_NAME,shelf.SHELF_CODE, SHELF_NAME,CELL_NAME,ProductID, product.PRODUCT_MODEL,PRODUCT.PRODUCT_PartsName,COLOR_NAME,task.PalletCode,CELL_CODE, task.ColorID,task.TaskID,task.TaskNo)
      tmp    order by AREA_CODE,SHELF_CODE,TaskNo
    </CommandString>
  </Command>
  
  <!--出库审核，取消-->
  <Command ID="SPCheckOutStock">
    <CommandString>
      sp_CheckOutStock
    </CommandString>
  </Command>
  
  <Command ID="SPCancelOutStock">
    <CommandString>
      sp_CancelOutStock
    </CommandString>
  </Command>
  
  
  
  <!--出库调拨单-->
  <Command ID="SelectTransferInnerSub">
    <CommandString>
      select distinct main.* from View_WMS_Transfer main
      inner join WMS_TransferSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      where {0}
      ORDER BY BillDate DESC, main.BillID DESC
    </CommandString>
  </Command>
  
  <Command ID="SelectTransfer">
    <CommandString>
      select * from View_WMS_Transfer
      where {0}
      ORDER BY BillDate DESC, BillID DESC
    </CommandString>
  </Command>
  <Command ID="DeleteTransfer">
    <CommandString>
      delete from WMS_Transfer WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertTransfer">
    <CommandString>
      insert into WMS_Transfer(BillID,Flag,BillDate,OutStockID,CustomerID,TranCustomerID,Memo, Creator, CreateDate, Updater, UpdateDate)
      values(@BillID,@Flag,@BillDate, @OutStockID,@CustomerID,@TranCustomerID,@Memo, @Creator, getdate(), @Updater, getdate())
    </CommandString>
  </Command>
  <Command ID="UpdateTransfer">
    <CommandString>
      Update WMS_Transfer Set BillID=@BillID,BillDate=@BillDate,OutStockID=@OutStockID,CustomerID=@CustomerID,TranCustomerID=@TranCustomerID,Memo=@Memo,
      Updater=@Updater,UpdateDate=getdate() where {0}
    </CommandString>
  </Command>
 

  <Command ID="SelectTransferSub">
    <CommandString>
      select sub.*,color.COLOR_NAME  as ColorName,product.PRODUCT_NAME as ProductName,product.PRODUCT_MODEL as  ProductModel,product.PRODUCT_FMODEL as  ProductFModel
      from WMS_TransferSub sub
      LEFT OUTER JOIN dbo.CMD_COLOR AS color ON sub.ColorID = color.COLOR_CODE AND color.PRODUCT_CODE = sub.ProductID
      LEFT OUTER JOIN dbo.V4_CMD_PRODUCT AS product ON sub.ProductID = product.Product_Code
      where {0}
    </CommandString>
  </Command>
  <Command ID="DeleteTransferSub">
    <CommandString>
      delete from WMS_TransferSub WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertTransferSub">
    <CommandString>
      INSERT INTO WMS_TransferSub(BillID, RowID, Flag, ProductID, ColorID,Qty)
      values(@BillID,@RowID,@Flag,@ProductID,@ColorID,@Qty)
    </CommandString>
  </Command>

  <Command ID="SelectTransferDetail">
    <CommandString>
      select Detail.*,CMD_COLOR.COLOR_NAME  as ColName,CMD_PRODUCT.Product_Name as ProdName
      from WMS_TransferDetail Detail
      left join CMD_PRODUCT on Detail.ProductID=CMD_PRODUCT.Product_Code
      left join CMD_COLOR on Detail.ColorID=CMD_COLOR.COLOR_CODE and CMD_COLOR.Product_Code = SUBSTRING(Detail.ProductID, 1, 5)
      where {0}
    </CommandString>
  </Command>
  <Command ID="DeleteTransferDetail">
    <CommandString>
      delete from WMS_TransferDetail WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertTransferDetail">
    <CommandString>
      INSERT INTO WMS_TransferDetail(BillID, RowID, Flag, BarCode, ProductID, ColorID)
      values(@BillID, @RowID, @Flag, @BarCode, @ProductID, @ColorID)
    </CommandString>
  </Command>
   
  <Command ID="UpdateTransferCheck">
    <CommandString>
      Update WMS_Transfer Set Checker=@Checker, CheckDate={1} where {0}
    </CommandString>
  </Command>
  
  <!--销售退货单-->
  <Command ID="SelectReturnInnerSub">
    <CommandString>
      select distinct main.* from View_WMS_Return main inner join WMS_TransferSub sub
      on main.Flag=sub.Flag and main.BillID=sub.BillID
      where {0}
      ORDER BY BillDate DESC, main.BillID DESC
    </CommandString>
  </Command>
  
  <Command ID="SelectReturn">
    <CommandString>
      select * from View_WMS_Return
      where {0}
      ORDER BY BillDate DESC, BillID DESC
    </CommandString>
  </Command>
  <!--销售退货单审核-->
  <Command ID="SPCheckReturn">
    <CommandString>
      sp_CheckReturn
    </CommandString>
  </Command>
  
  <!--移入移出单-->
  <Command ID="SelectMigration">
    <CommandString>
      select main.*,cmd.FactoryName from WMS_Migration main 
      left join CMD_Factory cmd on main.FactoryID=cmd.FactoryID
      where {0}
      ORDER BY BillDate DESC, BillID DESC
    </CommandString>
  </Command>
  <Command ID="DeleteMigration">
    <CommandString>
      delete from WMS_Migration WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertMigration">
    <CommandString>
      insert into WMS_Migration(BillID, Flag, BillDate, StockFunction,OutStockType, Memo, Creator, CreateDate, Updater, UpdateDate,FactoryID)
      values(@BillID, @Flag, @BillDate, @StockFunction,@OutStockType, @Memo, @Creator, getdate(), @Updater, getdate(),@FactoryID)
    </CommandString>
  </Command>
  <Command ID="UpdateMigration">
    <CommandString>
      Update WMS_Migration Set BillID=@BillID,BillDate=@BillDate,StockFunction=@StockFunction,OutStockType=@OutStockType,Memo=@Memo,
      Updater=@Updater,UpdateDate=getdate(),FactoryID=@FactoryID where {0}
    </CommandString>
  </Command>
  <Command ID="SelectMigrationProductRemainQty">
    <CommandString>
      select ProductID,ColorID,sum(Qty) as Qty  from CMD_WareHouseProduct  product where Flag in(0,1) and ProductID=@ProductID and ColorID=@ColorID group by ProductID,ColorID
    </CommandString>
  </Command>
  <!--移入移出单作业审核-->
  <Command ID="UpdateMigrationTaskCheck">
    <CommandString>
      Update WMS_Migration Set TaskChecker=@TaskChecker, TaskCheckDate={1},State={2} where {0}
    </CommandString>
  </Command>
  <Command ID="SPMigrationTask">
    <CommandString>
      sp_MigrationTask
    </CommandString>
  </Command>
  <Command ID="SPMigrationUnTask">
    <CommandString>
      sp_MigrationUnTask
    </CommandString>
  </Command>
  

  <Command ID="SelectMigrationSub">
    <CommandString>
      select sub.*,color.COLOR_NAME  as ColorName,product.PRODUCT_NAME as ProductName,product.PRODUCT_MODEL as  ProductModel,product.PRODUCT_FMODEL as ProductFModel
      from WMS_MigrationSub sub
      LEFT OUTER JOIN dbo.CMD_COLOR AS color ON sub.ColorID = color.COLOR_CODE AND color.PRODUCT_CODE = sub.ProductID
      LEFT OUTER JOIN dbo.V4_CMD_PRODUCT AS product ON sub.ProductID = product.Product_Code
      where {0}
    </CommandString>
  </Command>
  <Command ID="DeleteMigrationSub">
    <CommandString>
      delete from WMS_MigrationSub WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertMigrationSub">
    <CommandString>
      INSERT INTO WMS_MigrationSub(BillID, RowID, Flag, ProductID, ColorID, Qty,StarNo,EndNo)
      values(@BillID,@RowID,@Flag,@ProductID,@ColorID,@Qty,@StarNo,@EndNo)
    </CommandString>
  </Command>

  <Command ID="SelectMigrationDetail">
    <CommandString>
      select Detail.*,CMD_COLOR.COLOR_NAME  as ColName,CMD_PRODUCT.Product_Name as ProdName
      from WMS_MigrationDetail Detail
      left join CMD_PRODUCT on Detail.ProductID=CMD_PRODUCT.Product_Code
      left join CMD_COLOR on Detail.ColorID=CMD_COLOR.COLOR_CODE and CMD_COLOR.Product_Code = SUBSTRING(Detail.ProductID, 1, 5)
      where {0}
    </CommandString>
  </Command>
  <Command ID="DeleteMigrationDetail">
    <CommandString>
      delete from WMS_MigrationDetail WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertMigrationDetail">
    <CommandString>
      INSERT INTO WMS_MigrationDetail(BillID, RowID, Flag, BarCode, ProductID, ColorID)
      values(@BillID, @RowID, @Flag, @BarCode, @ProductID, @ColorID)
    </CommandString>
  </Command>

  <Command ID="SPCheckMigration">
    <CommandString>
      sp_CheckMigration
    </CommandString>
  </Command>

  <!--移库备货清单-->
  <Command ID="SelectMTaskTemp">
    <CommandString>
      select AREA_NAME,SHELF_NAME,CELL_NAME,PRODUCT_MODEL ,PRODUCT_NAME,COLOR_NAME, PalletCode,  Qty,CELL_CODE,  ProductID,ColorID from (
      select AREA_NAME,SHELF_NAME,CELL_NAME,product.PRODUCT_MODEL,PRODUCT.PRODUCT_NAME,COLOR_NAME, PalletCode,task.Quantity as Qty,CELL_CODE,  ProductID,task.ColorID ,OrderIndex from WCS_TASK task
      left join CMD_WH_CELL CELL on task.CellCode=cell.CELL_CODE
      left join CMD_WH_SHELF Shelf on cell.SHELF_CODE=shelf.SHELF_CODE
      left join CMD_WH_AREA Area on AREA.AREA_CODE=cell.AREA_CODE
      left join V4_CMD_PRODUCT Product on Product.PRODUCT_CODE=task.ProductID
      left join CMD_COLOR Color on color.COLOR_CODE=task.ColorID and color.PRODUCT_CODE=SUBSTRING(task.ProductID,1,5)
      where State=0  and task.PalletCode='' and task.billID!=''  and TaskType=2
      union all
      select AREA_NAME,SHELF_NAME,CELL_NAME,product.PRODUCT_MODEL,PRODUCT.PRODUCT_PartsName as PRODUCT_NAME ,COLOR_NAME, PalletCode,task.Quantity as Qty,CELL_CODE,  ProductID,task.ColorID ,OrderIndex from WCS_TASK task
      left join CMD_WH_CELL CELL on task.CellCode=cell.CELL_CODE
      left join CMD_WH_SHELF Shelf on cell.SHELF_CODE=shelf.SHELF_CODE
      left join CMD_WH_AREA Area on AREA.AREA_CODE=cell.AREA_CODE
      left join CMD_PRODUCT Product on Product.PRODUCT_CODE=task.ProductID
      left join CMD_COLOR Color on color.COLOR_CODE=task.ColorID and color.PRODUCT_CODE=SUBSTRING(task.ProductID,1,5)
      where State=0   and task.billID!=''and task.PalletCode!=''   and TaskType=2
      union all
      select AREA_NAME,SHELF_NAME,CELL_NAME,product.PRODUCT_MODEL,PRODUCT.PRODUCT_PartsName as PRODUCT_NAME,COLOR_NAME, PalletCode,task.Quantity as Qty,CELL_CODE,  ProductID,task.ColorID,OrderIndex from WCS_TASK task
      left join CMD_WH_CELL CELL on task.CellCode=cell.CELL_CODE
      left join CMD_WH_SHELF Shelf on cell.SHELF_CODE=shelf.SHELF_CODE
      left join CMD_WH_AREA Area on AREA.AREA_CODE=cell.AREA_CODE
      left join CMD_PRODUCT Product on Product.PRODUCT_CODE=task.ProductID
      left join CMD_COLOR Color on color.COLOR_CODE=task.ColorID and color.PRODUCT_CODE=SUBSTRING(task.ProductID,1,5)
      where State=0  and task.PalletCode!=''  and TaskType in (4,6)) tmp
      order by orderindex

    </CommandString>
  </Command>

  <!--管理移库单-->
  <Command ID="SelectMove">
    <CommandString>
      select * from WMS_Move
      where {0}
      ORDER BY BillDate DESC, BillID DESC
    </CommandString>
  </Command>
  <Command ID="DeleteMove">
    <CommandString>
      delete from WMS_Move WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertMove">
    <CommandString>
      insert into WMS_Move(BillID, Flag, BillDate, Memo, Creator, CreateDate, Updater, UpdateDate)
      values(@BillID, @Flag, @BillDate, @Memo, @Creator, getdate(), @Updater, getdate())
    </CommandString>
  </Command>
  <Command ID="UpdateMove">
    <CommandString>
      Update WMS_Move  Set BillID=@BillID,BillDate=@BillDate,Memo=@Memo,Updater=@Updater,UpdateDate=getdate() where {0}
    </CommandString>
  </Command>
   
  <!--移入移出单作业审核-->
  <Command ID="UpdateMoveCheck">
    <CommandString>
      Update WMS_Move Set Checker=@Checker, CheckDate={1},State={2} where {0}
    </CommandString>
  </Command>
  <Command ID="SPMoveTask">
    <CommandString>
      sp_MoveTask
    </CommandString>
  </Command>
  <Command ID="SPMoveUnTask">
    <CommandString>
      sp_MoveUnTask
    </CommandString>
  </Command>


  <Command ID="SelectMoveSub">
    <CommandString>
      select sub.*,shelf.SHELF_NAME as ShelfName,Product.PRODUCT_PartsName as ProductName,color.COLOR_NAME as ColorName from wms_movesub sub
      left join CMD_WH_SHELF shelf on sub.ShelfCode=shelf.SHELF_CODE
      left join CMD_PRODUCT Product on shelf.DefaultProduct=product.PRODUCT_CODE
      left join CMD_COLOR Color on shelf.DefaultColor=color.COLOR_CODE and color.PRODUCT_CODE= SUBSTRING(shelf.DefaultProduct, 1, 5)
      where {0}
    </CommandString>
  </Command>
  <Command ID="DeleteMoveSub">
    <CommandString>
      delete from WMS_MoveSub WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertMoveSub">
    <CommandString>
      INSERT INTO WMS_MoveSub(BillID, RowID, Flag, ShelfCode)
      values(@BillID,@RowID,@Flag,@ShelfCode)
    </CommandString>
  </Command>

<!--获取未出货的直出单明细-->
  <Command ID="SelectNoStraightOutSub">
    <CommandString>
      select sub.*,color.COLOR_NAME  as ColorName,product.PRODUCT_NAME as ProductName,product.PRODUCT_MODEL as  ProductModel,product.PRODUCT_FMODEL as ProductFModel,InStockQty-ScanQty as NotOutStockQty
      from WMS_StockSub sub
      LEFT OUTER JOIN dbo.CMD_COLOR AS color ON sub.ColorID = color.COLOR_CODE AND color.PRODUCT_CODE = sub.ProductID
      LEFT OUTER JOIN dbo.V4_CMD_PRODUCT AS product ON sub.ProductID = product.Product_Code
      where InStockQty-ScanQty>0 and {0}

    </CommandString>
  </Command>
  <Command ID="SelectNoStraightOutSubByProduct">
    <CommandString>
      SELECT sub.InStockQty - ISNULL(tmp.InStockQty, 0) AS NotOutStockQty
      FROM         WMS_StockSub AS sub
      LEFT OUTER JOIN  (SELECT     main.SourceNo, StockSub.ProductID, StockSub.ColorID, SUM(StockSub.PlanQty) AS InStockQty
      FROM          dbo.WMS_SCHEDULESUB AS StockSub INNER JOIN
      dbo.WMS_SCHEDULE AS main ON StockSub.Flag = main.Flag AND StockSub.ScheduleNo = main.ScheduleNo
      WHERE      (StockSub.Flag = 2)  and main.ScheduleNo!=@BillID and StockSub.ProductID=@ProductID and StockSub.ColorID=@ColorID
      GROUP BY main.SourceNo, StockSub.ProductID, StockSub.ColorID) AS tmp ON
      sub.BillID = tmp.SourceNo AND sub.ProductID = tmp.ProductID AND
      sub.ColorID = tmp.ColorID
      where sub.BillID=@SourceNo  and sub.ProductID=@ProductID and sub.ColorID=@ColorID
    </CommandString>
  </Command>

  <!--获取未出货的直出单-->
  <Command ID="SelectNoStraightOut">
    <CommandString>
      select * from View_WMS_OutStock main
      where exists(select 1 from WMS_StockSub sub where sub.Flag=main.flag and sub.BillID=main.BillID and sub.InStockQty-sub.ScanQty >0)
      and BillID not in (select SourceNo from WMS_SCHEDULE where Flag=2 ) and DriverType=1 and TaskChecker!='' and {0}
      ORDER BY BillDate DESC, ScheduleNo DESC
    </CommandString>
  </Command>



  <!--直入直出单-->
  <Command ID="SelectStraightInnerSub">
    <CommandString>
      select distinct main.* from View_WMS_Straight main
      inner join WMS_SCHEDULESUB sub on main.Flag=sub.Flag and main.ScheduleNo=sub.ScheduleNo
      where {0}
      ORDER BY BillDate DESC, main.ScheduleNo DESC
    </CommandString>
  </Command>
  <Command ID="SelectStraight">
    <CommandString>
      select * from View_WMS_Straight
      where {0}
      ORDER BY BillDate DESC, ScheduleNo DESC
    </CommandString>
  </Command>
  <Command ID="DeleteStraight">
    <CommandString>
      delete from WMS_SCHEDULE WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertStraight">
    <CommandString>
      insert into WMS_SCHEDULE(Flag, ScheduleNo, BillDate, SourceNo, Memo, Creator, CreateDate, Updater, UpdateDate)
      values(@Flag, @ScheduleNo, @BillDate, @SourceNo, @Memo, @Creator, getdate(), @Updater, getdate())
    </CommandString>
  </Command>
  <Command ID="UpdateStraight">
    <CommandString>
      Update WMS_SCHEDULE Set BillDate=@BillDate,SourceNo=@SourceNo,Memo=@Memo,Updater=@Updater,UpdateDate=getdate() where {0}
    </CommandString>
  </Command>
  <Command ID="SPStraightCheck">
    <CommandString>
      sp_CheckStraight
    </CommandString>
  </Command>
  <Command ID="SPStraightCheck2">
    <CommandString>
      sp_CheckStraight2
    </CommandString>
  </Command>
  <Command ID="UpdateStraightToK3">
    <CommandString>
      Update WMS_SCHEDULE Set IsPDA='2' where {0}
    </CommandString>
  </Command>
  


  <Command ID="SelectStraightSub">
    <CommandString>
      select * from View_WMS_StraightSub
      where {0}
    </CommandString>
  </Command>
  <Command ID="DeleteStraightSub">
    <CommandString>
      delete from WMS_SCHEDULESUB WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertStraightSub">
    <CommandString>
      INSERT INTO WMS_SCHEDULESUB(Flag,ScheduleNo,RowID,ProductID,ColorID,PlanQty,StarNo,EndNo)
      values(@Flag,@ScheduleNo,@RowID,@ProductID,@ColorID,@PlanQty,@StarNo,@EndNo)
    </CommandString>
  </Command>
  
  <!--其它出库单-->
  <Command ID="SelectOtherDeliverInnerSub">
    <CommandString>
      select distinct main.* from View_WMS_OtherDeliver main
      inner join WMS_TransferSub Sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      where {0}
      ORDER BY BillDate DESC, main.BillID DESC
    </CommandString>
  </Command>

  <Command ID="SelectOtherDeliver">
    <CommandString>
      select * from View_WMS_OtherDeliver
      where {0}
      ORDER BY BillDate DESC, BillID DESC
    </CommandString>
  </Command>
  <Command ID="DeleteOtherDeliver">
    <CommandString>
      delete from WMS_Transfer WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertOtherDeliver">
    <CommandString>
      insert into WMS_Transfer(BillID,Flag,BillDate,OutStockID,CustomerID,TranCustomerID,Memo, Creator, CreateDate, Updater, UpdateDate)
      values(@BillID,@Flag,@BillDate, @OutStockID,@CustomerID,@TranCustomerID,@Memo, @Creator, getdate(), @Updater, getdate())
    </CommandString>
  </Command>
  <Command ID="UpdateOtherDeliver">
    <CommandString>
      Update WMS_Transfer Set BillID=@BillID,BillDate=@BillDate,OutStockID=@OutStockID,CustomerID=@CustomerID,TranCustomerID=@TranCustomerID,Memo=@Memo,
      Updater=@Updater,UpdateDate=getdate() where {0}
    </CommandString>
  </Command>


  <Command ID="SelectOtherDeliverSub">
    <CommandString>
      select sub.*,color.COLOR_NAME  as ColorName,product.PRODUCT_NAME as ProductName,product.PRODUCT_MODEL as  ProductModel,product.PRODUCT_FMODEL as  ProductFModel
      from WMS_TransferSub sub
      LEFT OUTER JOIN dbo.CMD_COLOR AS color ON sub.ColorID = color.COLOR_CODE AND color.PRODUCT_CODE = sub.ProductID
      LEFT OUTER JOIN dbo.V4_CMD_PRODUCT AS product ON sub.ProductID = product.Product_Code
      where {0}
    </CommandString>
  </Command>
  <Command ID="DeleteOtherDeliverSub">
    <CommandString>
      delete from WMS_TransferSub WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertOtherDeliverSub">
    <CommandString>
      INSERT INTO WMS_TransferSub(BillID, RowID, Flag, ProductID, ColorID,Qty)
      values(@BillID,@RowID,@Flag,@ProductID,@ColorID,@Qty)
    </CommandString>
  </Command>

  <Command ID="SelectOtherDeliverDetail">
    <CommandString>
      select Detail.*,CMD_COLOR.COLOR_NAME  as ColName,CMD_PRODUCT.Product_Name as ProdName
      from WMS_TransferDetail Detail
      left join CMD_PRODUCT on Detail.ProductID=CMD_PRODUCT.Product_Code
      left join CMD_COLOR on Detail.ColorID=CMD_COLOR.COLOR_CODE and CMD_COLOR.Product_Code = SUBSTRING(Detail.ProductID, 1, 5)
      where {0}
    </CommandString>
  </Command>
  <Command ID="DeleteOtherDeliverDetail">
    <CommandString>
      delete from WMS_TransferDetail WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertOtherDeliverDetail">
    <CommandString>
      INSERT INTO WMS_TransferDetail(BillID, RowID, Flag, BarCode, ProductID, ColorID)
      values(@BillID, @RowID, @Flag, @BarCode, @ProductID, @ColorID)
    </CommandString>
  </Command>

  <Command ID="SelectOtherDeliverNoCheck">
    <CommandString>
      SELECT        ISNULL( SUM(Tsub.Qty),0) AS Qty
      FROM         dbo.WMS_Transfer AS Tmain LEFT OUTER JOIN
      dbo.WMS_TransferSub AS Tsub ON Tmain.BillID = Tsub.BillID AND Tmain.Flag = Tsub.Flag
      WHERE     (Tmain.Flag = 3) AND (Tmain.Checker = '') and Tmain.BillID!=@BillID and tsub.ProductID=@ProductID and tsub.ColorID=@ColorID and Tmain.OutStockID=@Flag

    </CommandString>
  </Command>

  <Command ID="spCheckOtherDeliver">
    <CommandString>
      sp_CheckOtherDeliver
    </CommandString>
  </Command>

  <Command ID="spCheckInstockReturn">
    <CommandString>
      sp_CheckInstockReturn
    </CommandString>
  </Command>


  <Command ID="SelectInStockReturnInnerSub">
    <CommandString>
      select distinct main.* from View_WMS_InStockReturn main
      inner join WMS_TransferSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      where {0}
      ORDER BY BillDate DESC, main.BillID DESC
    </CommandString>
  </Command>
  
  <Command ID="SelectInStockReturn">
    <CommandString>
      select * from View_WMS_InStockReturn
      where {0}
      ORDER BY BillDate DESC, BillID DESC
    </CommandString>
  </Command>

  <Command ID="SelectMsg">
    <CommandString>
      sp_ShowMSg
    </CommandString>
  </Command>

  <Command ID="SelectOutStockMsg">
    <CommandString>
      select distinct main.ScheduleNo
      from View_WMS_DeliverSchedule main
      inner join View_WMS_DeliverScheduleSub sub on main.Flag=sub.Flag and main.ScheduleNo=sub.ScheduleNo
      where sub.PlanQty-sub.RealQty>0 and main.Flag=1 and CheckUser!=''
    </CommandString>
  </Command>
  
  <Command ID="SelectStockByTaskID">
    <CommandString>
      select BillID from WMS_Stock where TaskID=@TaskID and Flag=2
    </CommandString>
  </Command>
  <Command ID="SelectOutStockSubByBillID">
    <CommandString>
      select  sub.BillID,main.CustName,main.ParCustName,main.LinkPhone,main.LinkPerson,main.LinkAddress,color.COLOR_NAME as ColorName,
      product.PRODUCT_NAME as ProductName,product.PRODUCT_MODEL as  ProductModel,product.PRODUCT_FMODEL as ProductFModel,sub.InStockQty
      from WMS_StockSub sub
      inner join View_WMS_OutStock main on main.Flag=sub.Flag and main.BillID=sub.BillID
      LEFT OUTER JOIN dbo.CMD_COLOR AS color ON sub.ColorID = color.COLOR_CODE AND color.PRODUCT_CODE = sub.ProductID
      LEFT OUTER JOIN dbo.V4_CMD_PRODUCT AS product ON sub.ProductID = product.Product_Code
      where sub.Flag=2 and sub.BillID=@BillID
    </CommandString>
  </Command>
  <Command ID="SelectStockBillIDByStraight">
    <CommandString>
      select BillID from WMS_Stock where StraightBillID=@BillID and Flag=@Flag
    </CommandString>
  </Command>
  
  
  <!--查询使用-->
  <Command ID="SelectScheduleQuery">
    <CommandString>
      select ROW_NUMBER() over(order by sub.productid ,sub.colorid,main.ScheduleNo) as RowNum,*
      from  View_WMS_Schedule main
      inner join View_WMS_SCHEDULESUB sub on main.Flag=sub.Flag and main.ScheduleNo=sub.ScheduleNo
      where main.Flag=1 and {0}
      order by sub.productid ,sub.colorid,main.ScheduleNo
    </CommandString>
  </Command>
  <Command ID="SelectOutScheduleQuery">
    <CommandString>
      select main.*,sub.ProductModel,sub.ProductFModel,sub.ProductName,sub.ColorName,sub.PlanQty, sub.Price,sub.Amount,sub.PlanDate,sub.RealQty,sub.NotOutStockQty,sub.Memo,
      case when main.Transport=1 then '月结送货上门' when main.Transport=2 then '月结送货入户' when main.Transport=3 then '售后仓自提' when main.Transport=4 then '前埔仓自提' when main.Transport=5 then '运费到付' when main.Transport=6 then '快递月结'
      when main.Transport=7 then '快递到付' when main.Transport=8 then '其他' end +SPACE(2)+main.CustPerson as Transport
      from View_WMS_DeliverSchedule main
      inner join View_WMS_DeliverScheduleSub sub on main.Flag=sub.Flag and main.ScheduleNo=sub.ScheduleNo
      where main.Flag=1 and {0}
      order by main.ScheduleNo,sub.ProductModel,sub.ColorName
    </CommandString>
  </Command>

  <Command ID="SelectOutScheduleCustQuery">
    <CommandString>
      select main.CustName,main.AreaSation,sub.ProductModel,sub.ProductFModel,sub.ProductName,sub.ColorName,sum(sub.PlanQty) as PlanQty,Sum(sub.Amount) as Amount,sum(sub.RealQty) as RealQty,sum(sub.NotOutStockQty) as NotOutStockQty from View_WMS_DeliverSchedule main
      inner join View_WMS_DeliverScheduleSub sub on main.Flag=sub.Flag and main.ScheduleNo=sub.ScheduleNo
      where main.Flag=1 and {0}
      group by main.CustName,main.AreaSation,sub.ProductModel,sub.ProductFModel,sub.ProductName,sub.ColorName
      order by main.AreaSation,main.CustName,sub.ProductModel
    </CommandString>
  </Command>

  <Command ID="SelectOutScheduleProductQuery">
    <CommandString>
      select sub.ProductModel,sub.ProductFModel,sub.ProductName,sub.ColorName,sum(sub.PlanQty) as PlanQty,Sum(sub.Amount) as Amount,sum(sub.RealQty) as RealQty,sum(sub.NotOutStockQty) as NotOutStockQty from View_WMS_DeliverSchedule main
      inner join View_WMS_DeliverScheduleSub sub on main.Flag=sub.Flag and main.ScheduleNo=sub.ScheduleNo
      where main.Flag=1 and {0}
      group by sub.ProductModel,sub.ProductFModel,sub.ProductName,sub.ColorName
    </CommandString>
  </Command>


  <Command ID="SelectOutStockDeliverQuery">
    <CommandString>
      select main.BillID,main.AreaSation,main.CustName,ScheduleSub.ProductName ,ScheduleSub.ProductModel,ScheduleSub.ProductFModel ,ScheduleSub.ColorName
      ,sub.InStockQty,ScheduleSub.Price,sub.InStockQty*ScheduleSub.Price as Amount,ScheduleBillDate,ScheduleSub.PlanDate,ScheduleSub.Memo,main.BillDate,main.CheckDate,
      main.LinkPerson,main.LinkPhone,main.LinkAddress,main.ScheduleNo,case when  main.DriverType=0 then '库存单' else '直出单' end  as DriverType,
      case when main.Transport=1 then '月结送货上门' when main.Transport=2 then '月结送货入户' when main.Transport=3 then '售后仓自提' when main.Transport=4 then '前埔仓自提' when main.Transport=5 then '运费到付' when main.Transport=6 then '快递月结'
      when main.Transport=7 then '快递到付' when main.Transport=8 then '其他' end +SPACE(2)+main.CustPerson as Transport,main.Checker,main.CheckDate,main.StraightBillID
      from  View_WMS_OutStock Main
      inner join WMS_StockSub Sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      inner join View_WMS_DeliverScheduleSub ScheduleSub on ScheduleSub.ProductID=sub.ProductID and ScheduleSub.ColorID=sub.ColorID and ScheduleSub.ScheduleNo=main.ScheduleNo
      where main.Flag=2 and main.Canceler='' and {0}
      order by main.BillID,ScheduleSub.ProductModel,ScheduleSub.ColorName
    </CommandString>
  </Command>

  <Command ID="SelectOutStockDeliverCustQuery">
    <CommandString>
      select main.AreaSation,main.CustName,ScheduleSub.ProductName ,ScheduleSub.ProductModel,ScheduleSub.ProductFModel ,ScheduleSub.ColorName
      ,SUM( sub.InStockQty) as InStockQty,sum(sub.InStockQty*ScheduleSub.Price) as Amount
      from  View_WMS_OutStock Main
      inner join WMS_StockSub Sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      inner join View_WMS_DeliverScheduleSub ScheduleSub on ScheduleSub.ProductID=sub.ProductID and ScheduleSub.ColorID=sub.ColorID and ScheduleSub.ScheduleNo=main.ScheduleNo
      where main.Flag=2 and main.Canceler='' and {0}
      group by main.CustName,main.AreaSation,ScheduleSub.ProductModel,ScheduleSub.ProductFModel,ScheduleSub.ProductName,ScheduleSub.ColorName
      order by main.AreaSation,main.CustName,ScheduleSub.ProductModel
    </CommandString>
  </Command>

  <Command ID="SelectOutStockDeliverProductQuery">
    <CommandString>
      select ScheduleSub.ProductName ,ScheduleSub.ProductModel,ScheduleSub.ProductFModel ,ScheduleSub.ColorName
      ,SUM( sub.InStockQty) as InStockQty,sum(sub.InStockQty*ScheduleSub.Price) as Amount
      from  View_WMS_OutStock Main
      inner join WMS_StockSub Sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      inner join View_WMS_DeliverScheduleSub ScheduleSub on ScheduleSub.ProductID=sub.ProductID and ScheduleSub.ColorID=sub.ColorID and ScheduleSub.ScheduleNo=main.ScheduleNo
      where main.Flag=2 and main.Canceler='' and {0}
      group by ScheduleSub.ProductModel,ScheduleSub.ProductFModel,ScheduleSub.ProductName,ScheduleSub.ColorName
      order by ScheduleSub.ProductModel
    </CommandString>
  </Command>



  <Command ID="SelectOutStockQuery">
    <CommandString>
      select Schedule.CustomerID,cust.CUSTOMER_NAME as CustName, Schedule.ParCustomerID,
      paycust.CUSTOMER_NAME as PayCustName,schedule.LinkPerson,schedule.LinkPhone,schedule.LinkAddress,
      main.BillID,main.BillDate,sub.RowID,sub.ProductID,sub.ColorID,InStockQty as Qty,
      PRODUCt.PRODUCT_MODEL,product.PRODUCT_FMODEL,product.PRODUCT_NAME,color.COLOR_NAME
      from WMS_Stock main
      inner join WMS_StockSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      inner join WMS_DeliverSchedule Schedule on main.ScheduleNo=Schedule.ScheduleNo
      inner join CMD_CUSTOMER Cust on Schedule.CustomerID=cust.CUSTOMER_CODE
      inner join CMD_CUSTOMER PayCust on Schedule.ParCustomerID=PayCust.CUSTOMER_CODE
      inner join V4_CMD_PRODUCT Product on Product.Product_Code=sub.ProductID
      inner join CMD_COLOR Color on sub.ProductID=color.PRODUCT_CODE and sub.ColorID=color.COLOR_CODE
      where main.Flag=2  and main.Canceler='' and main.Checker!='' and {0} and {1}
      union all
      select main.CustomerID,cust.CUSTOMER_NAME as CustName, main.TranCustomerID as ParCustomerID,
      paycust.CUSTOMER_NAME as PayCustName,'' as LinkPerson,'' as LinkPhone,'' as LinkAddress,
      main.BillID,main.BillDate,sub.RowID,sub.ProductID,sub.ColorID,Qty,
      PRODUCt.PRODUCT_MODEL,product.PRODUCT_FMODEL,product.PRODUCT_NAME,color.COLOR_NAME
      from WMS_Transfer main inner join WMS_TransferSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      inner join CMD_CUSTOMER Cust on main.CustomerID=cust.CUSTOMER_CODE
      inner join CMD_CUSTOMER PayCust on main.TranCustomerID=PayCust.CUSTOMER_CODE
      inner join V4_CMD_PRODUCT Product on Product.Product_Code=sub.ProductID
      inner join CMD_COLOR Color on sub.ProductID=color.PRODUCT_CODE and sub.ColorID=color.COLOR_CODE
      where main.Flag=3 and main.Checker!='' and {0} and {2}
      union all
      select main.CustomerID,cust.CUSTOMER_NAME as CustName, main.TranCustomerID as ParCustomerID,
      paycust.CUSTOMER_NAME as PayCustName, '' as LinkPerson,'' as LinkPhone,'' as LinkAddress,
      main.BillID,main.BillDate,sub.RowID,sub.ProductID,sub.ColorID,-Qty as qty ,
      PRODUCt.PRODUCT_MODEL,product.PRODUCT_FMODEL,product.PRODUCT_NAME,color.COLOR_NAME
      from WMS_Transfer main inner join WMS_TransferSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      inner join CMD_CUSTOMER Cust on main.CustomerID=cust.CUSTOMER_CODE
      inner join CMD_CUSTOMER PayCust on main.TranCustomerID=PayCust.CUSTOMER_CODE
      inner join V4_CMD_PRODUCT Product on Product.Product_Code=sub.ProductID
      inner join CMD_COLOR Color on sub.ProductID=color.PRODUCT_CODE and sub.ColorID=color.COLOR_CODE
      where main.Flag=2 and main.Checker!='' and {0} and {2}
    </CommandString>
  </Command>


  <Command ID="SelectOutStockTotalQuery">
    <CommandString>
      select ParCustomerID,PayCustName,CustomerID,CustName,LinkPerson,LinkPhone,LinkAddress,ProductID,ColorID,PRODUCT_FMODEL,PRODUCT_MODEL,PRODUCT_NAME,COLOR_NAME,SUM(qty) as Qty
      from (
      select Schedule.CustomerID,cust.CUSTOMER_NAME as CustName, Schedule.ParCustomerID,
      paycust.CUSTOMER_NAME as PayCustName,schedule.LinkPerson,schedule.LinkPhone,schedule.LinkAddress,
      main.BillID,main.BillDate,sub.RowID,sub.ProductID,sub.ColorID,InStockQty as Qty,
      PRODUCt.PRODUCT_MODEL,product.PRODUCT_FMODEL,product.PRODUCT_NAME,color.COLOR_NAME
      from WMS_Stock main
      inner join WMS_StockSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      inner join WMS_DeliverSchedule Schedule on main.ScheduleNo=Schedule.ScheduleNo
      inner join CMD_CUSTOMER Cust on Schedule.CustomerID=cust.CUSTOMER_CODE
      inner join CMD_CUSTOMER PayCust on Schedule.ParCustomerID=PayCust.CUSTOMER_CODE
      inner join V4_CMD_PRODUCT Product on Product.Product_Code=sub.ProductID
      inner join CMD_COLOR Color on sub.ProductID=color.PRODUCT_CODE and sub.ColorID=color.COLOR_CODE
      where main.Flag=2  and main.Canceler='' and main.Checker!='' and {0} and {1}
      union all
      select main.CustomerID,cust.CUSTOMER_NAME as CustName, main.TranCustomerID as ParCustomerID,
      paycust.CUSTOMER_NAME as PayCustName,'' as LinkPerson,'' as LinkPhone,'' as LinkAddress,
      main.BillID,main.BillDate,sub.RowID,sub.ProductID,sub.ColorID,Qty,
      PRODUCt.PRODUCT_MODEL,product.PRODUCT_FMODEL,product.PRODUCT_NAME,color.COLOR_NAME
      from WMS_Transfer main inner join WMS_TransferSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      inner join CMD_CUSTOMER Cust on main.CustomerID=cust.CUSTOMER_CODE
      inner join CMD_CUSTOMER PayCust on main.TranCustomerID=PayCust.CUSTOMER_CODE
      inner join V4_CMD_PRODUCT Product on Product.Product_Code=sub.ProductID
      inner join CMD_COLOR Color on sub.ProductID=color.PRODUCT_CODE and sub.ColorID=color.COLOR_CODE
      where main.Flag=3 and main.Checker!='' and {0} and {2}
      union all
      select main.CustomerID,cust.CUSTOMER_NAME as CustName, main.TranCustomerID as ParCustomerID,
      paycust.CUSTOMER_NAME as PayCustName, '' as LinkPerson,'' as LinkPhone,'' as LinkAddress,
      main.BillID,main.BillDate,sub.RowID,sub.ProductID,sub.ColorID,-Qty as qty ,
      PRODUCt.PRODUCT_MODEL,product.PRODUCT_FMODEL,product.PRODUCT_NAME,color.COLOR_NAME
      from WMS_Transfer main inner join WMS_TransferSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      inner join CMD_CUSTOMER Cust on main.CustomerID=cust.CUSTOMER_CODE
      inner join CMD_CUSTOMER PayCust on main.TranCustomerID=PayCust.CUSTOMER_CODE
      inner join V4_CMD_PRODUCT Product on Product.Product_Code=sub.ProductID
      inner join CMD_COLOR Color on sub.ProductID=color.PRODUCT_CODE and sub.ColorID=color.COLOR_CODE
      where main.Flag=2 and main.Checker!='' and {0} and {2}
      )tmp
      group by ParCustomerID,PayCustName,CustomerID,CustName,LinkPerson,LinkPhone,LinkAddress,ProductID,ColorID,PRODUCT_FMODEL,PRODUCT_MODEL,PRODUCT_NAME,COLOR_NAME
    </CommandString>
  </Command>


  <Command ID="SelectInStockQuery">
    <CommandString>
      select main.StraightBillID,main.Checker,main.CheckDate, Fact.FactoryName , schedule.ScheduleNo,main.BillID,main.BillDate,InStockQty,
      PRODUCt.PRODUCT_MODEL,product.PRODUCT_FMODEL,product.PRODUCT_NAME,color.COLOR_NAME
      from WMS_Stock main
      inner join WMS_StockSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      left join WMS_SCHEDULE Schedule on main.ScheduleNo=Schedule.ScheduleNo
      inner join CMD_Factory Fact on main.TaskChecker=Fact.FactoryID
      inner join V4_CMD_PRODUCT Product on Product.Product_Code=sub.ProductID
      inner join CMD_COLOR Color on sub.ProductID=color.PRODUCT_CODE and sub.ColorID=color.COLOR_CODE
      where  main.Flag=1 and Schedule.Flag=1 and {0}
      order by main.BillID,sub.ProductID,sub.ColorID
    </CommandString>
  </Command>


  <Command ID="SelectInStockTotalQuery">
    <CommandString>
      select Fact.FactoryName , sum(InStockQty) as InStockQty,
      PRODUCt.PRODUCT_MODEL,product.PRODUCT_FMODEL,product.PRODUCT_NAME,color.COLOR_NAME
      from WMS_Stock main
      inner join WMS_StockSub sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      inner join CMD_Factory Fact on main.TaskChecker=Fact.FactoryID
      inner join V4_CMD_PRODUCT Product on Product.Product_Code=sub.ProductID
      inner join CMD_COLOR Color on sub.ProductID=color.PRODUCT_CODE and sub.ColorID=color.COLOR_CODE
      where  main.Flag=1 and {0}
      group by Fact.FactoryName,PRODUCt.PRODUCT_MODEL,product.PRODUCT_FMODEL,product.PRODUCT_NAME,color.COLOR_NAME
    </CommandString>
  </Command>


  <Command ID="SelectShowInTask">
    <CommandString>
      select 方式,状态,库区,货位,托盘条码,产品部件,产品型号,规格,数量 from (
      select distinct '入库' as 方式,case when State=0 then '组盘中' when State=1 then '组盘完成' else '分配货位' end as 状态,
      AREA_NAME as 库区,SHELF_NAME as 货架, CELL_NAME as 货位,task.PalletCode as 托盘条码,
      PRODUCT_PartsName as 产品部件,product.PRODUCT_MODEL as 产品型号,COLOR_NAME as 规格,task.QUANTITY as 数量,State,TaskNo
      from WCS_Task Task
      inner join (select distinct productid,colorid,PalletCode from  WMS_PalletSub) Pallet on task.PalletCode=Pallet.PalletCode
      left join CMD_PRODUCT Product on product.PRODUCT_CODE=PALLET.ProductID
      left join CMD_COLOR color on substring(pallet.ProductID,1,5)=color.PRODUCT_CODE and pallet.ColorID=color.COLOR_CODE
      left join CMD_WH_CELL Cell on Task.CellCode=cell.CELL_CODE
      left join CMD_WH_SHELF Shelf on SHELF.SHELF_CODE=cell.SHELF_CODE
      left join CMD_WH_AREA Area on SHELF.AREA_CODE=area.AREA_CODE
      where task.CellCode!=''  and tasktype=1 and {0}
      union all
      select distinct '入库' as 方式,case when State=0 then '组盘中' when State=1 then '组盘完成' else '分配货位' end as 状态,
      AREA_NAME as 库区,'' as 货架, '' as 货位,task.PalletCode as 托盘条码,
      PRODUCT_PartsName as 产品部件,product.PRODUCT_MODEL as 产品型号,COLOR_NAME as 规格,task.QUANTITY as 数量,State,TaskNo
      from WCS_Task Task
      inner join (select distinct productid,colorid,PalletCode from  WMS_PalletSub) Pallet on task.PalletCode=Pallet.PalletCode
      left join CMD_PRODUCT Product on product.PRODUCT_CODE=PALLET.ProductID
      left join CMD_COLOR color on substring(pallet.ProductID,1,5)=color.PRODUCT_CODE and pallet.ColorID=color.COLOR_CODE
      inner join CMD_WH_SHELF Shelf on Shelf.DefaultProduct=pallet.ProductID and shelf.DefaultColor=pallet.ColorID
      and shelf.SHELF_CODE in (select MIN(SHELF_CODE) from CMD_WH_SHELF Shelf where DefaultProduct=pallet.ProductID and shelf.DefaultColor=pallet.ColorID)
      left join CMD_WH_CELL Cell on Task.CellCode=cell.CELL_CODE
      left join CMD_WH_AREA Area on SHELF.AREA_CODE=area.AREA_CODE
      where task.CellCode='' and tasktype=1 and {0} ) tmp order by state,货架,货位,TaskNo
    </CommandString>
  </Command>

  <Command ID="SelectShowOutTask">
    <CommandString>
      select  方式,状态,库区,货位,托盘条码,产品部件,产品型号,规格,数量 from (
      select distinct case when TaskType=1 then '入库'  when TaskType=2 then '出库' when TaskType=3 then '倒库' when TaskType=4 then '出库到展览区' when TaskType=5 then '移库' else '先移库后反库' end as 方式,
      case when State=0 then '任务下达' else '备货完成' end as 状态,
      AREA_NAME as 库区,SHELF_NAME as 货架, CELL_NAME as 货位,task.PalletCode as 托盘条码,
      PRODUCT_PartsName as 产品部件,product.PRODUCT_MODEL as 产品型号,COLOR_NAME as 规格,task.QUANTITY as 数量,State,TaskNo
      from WCS_Task Task
      inner join (select distinct productid,colorid,PalletCode from  WMS_PalletSub) Pallet on task.PalletCode=Pallet.PalletCode and task.ProductID=pallet.ProductID and task.ColorID=pallet.ColorID
      left join CMD_PRODUCT Product on product.PRODUCT_CODE=PALLET.ProductID
      left join CMD_COLOR color on substring(pallet.ProductID,1,5)=color.PRODUCT_CODE and pallet.ColorID=color.COLOR_CODE
      left join CMD_WH_CELL Cell on Task.CellCode=cell.CELL_CODE
      left join CMD_WH_SHELF Shelf on SHELF.SHELF_CODE=cell.SHELF_CODE
      left join CMD_WH_AREA Area on SHELF.AREA_CODE=area.AREA_CODE
      where tasktype!=1  and {0})tmp
      order by state,货架,货位,TaskNo
    </CommandString>
  </Command>

  <Command ID="SelectShowAllTask">
    <CommandString>
      select 方式,状态,库区,货位,托盘条码,产品部件,产品型号,规格,数量 from (
      select distinct '入库' as 方式,case when State=0 then '组盘中' when State=1 then '组盘完成' else '分配货位' end as 状态,
      AREA_NAME as 库区,SHELF_NAME as 货架, CELL_NAME as 货位,task.PalletCode as 托盘条码,
      PRODUCT_PartsName as 产品部件,product.PRODUCT_MODEL as 产品型号,COLOR_NAME as 规格,task.QUANTITY as 数量,State,TaskNo
      from WCS_Task Task
      inner join (select distinct productid,colorid,PalletCode from  WMS_PalletSub) Pallet on task.PalletCode=Pallet.PalletCode
      left join CMD_PRODUCT Product on product.PRODUCT_CODE=PALLET.ProductID
      left join CMD_COLOR color on substring(pallet.ProductID,1,5)=color.PRODUCT_CODE and pallet.ColorID=color.COLOR_CODE
      left join CMD_WH_CELL Cell on Task.CellCode=cell.CELL_CODE
      left join CMD_WH_SHELF Shelf on SHELF.SHELF_CODE=cell.SHELF_CODE
      left join CMD_WH_AREA Area on SHELF.AREA_CODE=area.AREA_CODE
      where task.CellCode!=''  and tasktype=1 and {0}
      union all
      select distinct '入库' as 方式,case when State=0 then '组盘中' when State=1 then '组盘完成' else '分配货位' end as 状态,
      AREA_NAME as 库区,'' as 货架, '' as 货位,task.PalletCode as 托盘条码,
      PRODUCT_PartsName as 产品部件,product.PRODUCT_MODEL as 产品型号,COLOR_NAME as 规格,task.QUANTITY as 数量,State,TaskNo
      from WCS_Task Task
      inner join (select distinct productid,colorid,PalletCode from  WMS_PalletSub) Pallet on task.PalletCode=Pallet.PalletCode
      left join CMD_PRODUCT Product on product.PRODUCT_CODE=PALLET.ProductID
      left join CMD_COLOR color on substring(pallet.ProductID,1,5)=color.PRODUCT_CODE and pallet.ColorID=color.COLOR_CODE
      inner join CMD_WH_SHELF Shelf on Shelf.DefaultProduct=pallet.ProductID and shelf.DefaultColor=pallet.ColorID
      and shelf.SHELF_CODE in (select MIN(SHELF_CODE) from CMD_WH_SHELF Shelf where DefaultProduct=pallet.ProductID and shelf.DefaultColor=pallet.ColorID)
      left join CMD_WH_CELL Cell on Task.CellCode=cell.CELL_CODE
      left join CMD_WH_AREA Area on SHELF.AREA_CODE=area.AREA_CODE
      where task.CellCode='' and tasktype=1 and {0}
      union all
      select distinct case when TaskType=1 then '入库'  when TaskType=2 then '出库' when TaskType=3 then '倒库' when TaskType=4 then '出库到展览区' when TaskType=5 then '移库' else '先移库后反库' end as 方式,
      case when State=0 then '任务下达' else '备货完成' end as 状态,
      AREA_NAME as 库区,SHELF_NAME as 货架, CELL_NAME as 货位,task.PalletCode as 托盘条码,
      PRODUCT_PartsName as 产品部件,product.PRODUCT_MODEL as 产品型号,COLOR_NAME as 规格,task.QUANTITY as 数量,State,TaskNo
      from WCS_Task Task
      inner join (select distinct productid,colorid,PalletCode from  WMS_PalletSub) Pallet on task.PalletCode=Pallet.PalletCode and task.ProductID=pallet.ProductID and task.ColorID=pallet.ColorID
      left join CMD_PRODUCT Product on product.PRODUCT_CODE=PALLET.ProductID
      left join CMD_COLOR color on substring(pallet.ProductID,1,5)=color.PRODUCT_CODE and pallet.ColorID=color.COLOR_CODE
      left join CMD_WH_CELL Cell on Task.CellCode=cell.CELL_CODE
      left join CMD_WH_SHELF Shelf on SHELF.SHELF_CODE=cell.SHELF_CODE
      left join CMD_WH_AREA Area on SHELF.AREA_CODE=area.AREA_CODE
      where tasktype!=1 and  {0}

      ) tmp order by state,货架,货位,TaskNo
    </CommandString>
  </Command>

  <Command ID="SelectBomNotProduct">
    <CommandString>
      select distinct ProductNo from CMD_ProductBOM where Product_Code=''
    </CommandString>
  </Command>
  
  <Command ID="SelectOutStockNotTask">
    <CommandString>
      select COUNT(1) as DriverCount,case when DriverType=0 then '库存单' else '直出单' end as DriverType  from (
      select distinct BillID,DriverType from View_WMS_OutStock main
      where exists(select 1 from WMS_StockSub sub where sub.Flag=main.flag and sub.BillID=main.BillID and sub.InStockQty-sub.ScanQty >0)
      and DriverType=0 and State=1
      union all
      select distinct BillID,DriverType from View_WMS_OutStock main
      where exists(select 1 from WMS_StockSub sub where sub.Flag=main.flag and sub.BillID=main.BillID and sub.InStockQty-sub.ScanQty >0)
      and BillID not in (select SourceNo from WMS_SCHEDULE where Flag=2 ) and DriverType=1 and TaskChecker!='' )
      tmp
      group by DriverType
    </CommandString>
  </Command>


  <Command ID="SelectMaxEndNo">
    <CommandString>
      select isnull(MAX(EndNo),'00000000000') from WMS_SCHEDULESUB where ProductID=@ProductID and SUBSTRING(CONVERT(nvarchar(10),plandate,112),3,4) =@PlanDate and EndNo!='' and ScheduleNo!=@ScheduleNo
    </CommandString>
  </Command>

  <!--调拨单-->
  <Command ID="SelectDeliverTransferInnerSub">
    <CommandString>
      select distinct Main.*,cmd.WAREHOUSE_NAME as StockName from WMS_Migration Main
      inner join WMS_MigrationSub Sub on main.Flag=sub.Flag and main.BillID=sub.BillID
      inner join CMD_WAREHOUSE CMD on Main.StockFunction=cmd.CMD_WAREHOUSE_ID
      WHERE {0}
      ORDER BY BillDate DESC, main.BillID DESC
    </CommandString>
  </Command>

  <Command ID="SelectDeliverTransfer">
    <CommandString>
      select WMS_Migration.*,cmd.WAREHOUSE_NAME as StockName from WMS_Migration  inner join CMD_WAREHOUSE CMD on WMS_Migration.StockFunction=cmd.CMD_WAREHOUSE_ID
      where {0}
      ORDER BY BillDate DESC, BillID DESC
    </CommandString>
  </Command>
  <Command ID="DeleteDeliverTransfer">
    <CommandString>
      delete from WMS_Migration WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertDeliverTransfer">
    <CommandString>
      insert into WMS_Migration(BillID, Flag, BillDate, StockFunction, Memo, Creator, CreateDate, Updater, UpdateDate)
      values(@BillID, @Flag, @BillDate, @StockFunction, @Memo, @Creator, getdate(), @Updater, getdate())
    </CommandString>
  </Command>
  <Command ID="UpdateDeliverTransfer">
    <CommandString>
      Update WMS_Migration Set BillID=@BillID,BillDate=@BillDate,StockFunction=@StockFunction,Memo=@Memo,
      Updater=@Updater,UpdateDate=getdate() where {0}
    </CommandString>
  </Command>
   
  <!--调拨单-->
  <Command ID="UpdateDeliverTransferTaskCheck">
    <CommandString>
      Update WMS_Migration Set TaskChecker=@TaskChecker, TaskCheckDate={1},State={2} where {0}
    </CommandString>
  </Command>
  


  <Command ID="SelectDeliverTransferSub">
    <CommandString>
      select sub.*,color.COLOR_NAME  as ColorName,product.PRODUCT_NAME as ProductName,product.PRODUCT_MODEL as  ProductModel,product.PRODUCT_FMODEL as ProductFModel,tmp.StockQty
      from WMS_MigrationSub sub
      LEFT OUTER JOIN dbo.CMD_COLOR AS color ON sub.ColorID = color.COLOR_CODE AND color.PRODUCT_CODE = sub.ProductID
      LEFT OUTER JOIN dbo.V4_CMD_PRODUCT AS product ON sub.ProductID = product.Product_Code
      left join (select PrdQty.ProductID,PrdQty.ColorID,PrdQty.StockQty-ISNULL(tmp2.UnStockQty,0) as StockQty  from (select distinct ProductID,ColorID,StockQty from View_ProductQty) PrdQty
      left join (select ProductID,ColorID,isnull(SUM(UnStockQty),0) as UnStockQty from View_ProductQty where BillID!=@BillID or BillID is null group by ProductID,ColorID ) tmp2 on PrdQty.ProductID=tmp2.ProductID and PrdQty.ColorID=tmp2.ColorID) tmp
      on sub.ProductID=tmp.Productid and sub.ColorID=tmp.ColorID
      where {0}
    </CommandString>
  </Command>

  <Command ID="SelectDeliverTransferSubByReport">
    <CommandString>
      select bom.ProductNo, color.COLOR_NAME as ColorName,product.PRODUCT_NAME as ProductName,product.PRODUCT_MODEL as  ProductModel,product.PRODUCT_FMODEL as  ProductFModel,sub.Qty,bom.Unit,product.SubCount,product.PACK_QTY,product.ProductVolume
      from WMS_MigrationSub sub
      LEFT OUTER JOIN dbo.CMD_COLOR AS color ON sub.ColorID = color.COLOR_CODE AND color.PRODUCT_CODE = sub.ProductID
      LEFT OUTER JOIN dbo.V4_CMD_PRODUCT AS product ON sub.ProductID = product.Product_Code
      left join CMD_ProductBOM Bom on bom.Product_Code=sub.ProductID and bom.ColorID=sub.ColorID
      where {0}
    </CommandString>
  </Command>

  <Command ID="SelectDeliverTransferDetailReport">
    <CommandString>
      select Detail.*,CMD_COLOR.COLOR_NAME  as ColName,CMD_PRODUCT.Product_Name as ProdName,CMD_PRODUCT.PRODUCT_MODEL,SUBSTRING(Detail.ProductID, 1, 5) as ProdID
      from WMS_MigrationDetail Detail
      left join CMD_PRODUCT on Detail.ProductID=CMD_PRODUCT.Product_Code
      left join CMD_COLOR on Detail.ColorID=CMD_COLOR.COLOR_CODE and CMD_COLOR.Product_Code = SUBSTRING(Detail.ProductID, 1, 5)
      where Detail.Flag=2 and BillID=@BillID
      order by SUBSTRING(Detail.ProductID, 1, 5),ColorID,BarCode
    </CommandString>
  </Command>
  
  <Command ID="DeleteDeliverTransferSub">
    <CommandString>
      delete from WMS_MigrationSub WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertDeliverTransferSub">
    <CommandString>
      INSERT INTO WMS_MigrationSub(BillID, RowID, Flag, ProductID, ColorID, Qty,Volume)
      values(@BillID,@RowID,@Flag,@ProductID,@ColorID,@Qty,@Volume)
    </CommandString>
  </Command>

  <Command ID="SelectDeliverTransferDetail">
    <CommandString>
      select Detail.*,CMD_COLOR.COLOR_NAME  as ColName,CMD_PRODUCT.Product_Name as ProdName
      from WMS_MigrationDetail Detail
      left join CMD_PRODUCT on Detail.ProductID=CMD_PRODUCT.Product_Code
      left join CMD_COLOR on Detail.ColorID=CMD_COLOR.COLOR_CODE and CMD_COLOR.Product_Code = SUBSTRING(Detail.ProductID, 1, 5)
      where {0}
    </CommandString>
  </Command>
  <Command ID="DeleteDeliverTransferDetail">
    <CommandString>
      delete from WMS_MigrationDetail WHERE {0}
    </CommandString>
  </Command>
  <Command ID="InsertDeliverTransferDetail">
    <CommandString>
      INSERT INTO WMS_MigrationDetail(BillID, RowID, Flag, BarCode, ProductID, ColorID)
      values(@BillID, @RowID, @Flag, @BarCode, @ProductID, @ColorID)
    </CommandString>
  </Command>

  <Command ID="SPCheckDeliverTransfer">
    <CommandString>
      sp_CheckDeliverTransfer
    </CommandString>
  </Command>
  <Command ID="SelectProductStockQty">
    <CommandString>
      select ProductID,ColorID,(StockQty-isnull((select SUM(UnStockQty) from View_ProductQty  where (billid!=@BillID  or BillID is null) and ProductID=@ProductID and ColorID=@ColorID),0)) as StockQty from View_ProductQTy
      where ProductID=@ProductID and ColorID=@ColorID
    </CommandString>
  </Command>
  <Command ID="SelectOutStockTask">
    <CommandString>
      select * from View_WMS_OutStockTask
      where {0}
      ORDER BY BillDate DESC, BillID DESC
    </CommandString>
  </Command>


  <Command ID="SelectOutStockTaskSub">
    <CommandString>
      select sub.Flag,sub.BillID,sub.RowID,sub.ProductID,sub.ColorID,sub.InStockQty,sub.Volume, color.COLOR_NAME  as ColorName,product.PRODUCT_NAME as ProductName,product.PRODUCT_MODEL as  ProductModel,product.PRODUCT_FMODEL as ProductFModel,product.PACK_QTY,product.ProductVolume,product.SubCount
      from WMS_StockSub sub
      LEFT OUTER JOIN dbo.CMD_COLOR AS color ON sub.ColorID = color.COLOR_CODE AND color.PRODUCT_CODE = sub.ProductID
      LEFT OUTER JOIN dbo.V4_CMD_PRODUCT AS product ON sub.ProductID = product.Product_Code
      where {0}
      union all
      select sub.Flag,sub.BillID,sub.RowID,sub.ProductID,sub.ColorID,sub.Qty as InStockQty,sub.Volume ,color.COLOR_NAME  as ColorName,product.PRODUCT_NAME as ProductName,product.PRODUCT_MODEL as  ProductModel,product.PRODUCT_FMODEL as ProductFModel,product.PACK_QTY,product.ProductVolume,product.SubCount
      from WMS_MigrationSub sub
      LEFT OUTER JOIN dbo.CMD_COLOR AS color ON sub.ColorID = color.COLOR_CODE AND color.PRODUCT_CODE = sub.ProductID
      LEFT OUTER JOIN dbo.V4_CMD_PRODUCT AS product ON sub.ProductID = product.Product_Code
      where {0}
    </CommandString>
  </Command>

  <Command ID="SelectDeliverTransferProductStockQty">
    <CommandString>
      select ProductID,ColorID,(StockQty-isnull(SUM(UnStockQty),0)) as StockQty from View_TransferProductQty
      where (billid!=@BillID  or BillID is null) and ProductID=@ProductID and ColorID=@ColorID and WareHouseID=@WareHouseID
      group by ProductID,ColorID,StockQty
    </CommandString>
  </Command>


  <Command ID="InsertTransferSale">
    <CommandString>
      insert into WMS_Transfer(BillID,Flag,BillDate,OutStockID,CustomerID,TranCustomerID,Memo, Creator, CreateDate, Updater, UpdateDate,StockArea)
      values(@BillID,@Flag,@BillDate, @OutStockID,@CustomerID,@TranCustomerID,@Memo, @Creator, getdate(), @Updater, getdate(),@StockArea)
    </CommandString>
  </Command>
  <Command ID="UpdateTransferSale">
    <CommandString>
      Update WMS_Transfer Set BillID=@BillID,BillDate=@BillDate,OutStockID=@OutStockID,CustomerID=@CustomerID,TranCustomerID=@TranCustomerID,Memo=@Memo,StockArea=@StockArea,
      Updater=@Updater,UpdateDate=getdate() where {0}
    </CommandString>
  </Command>

  <Command ID="InsertTransferSaleSub">
    <CommandString>
      INSERT INTO WMS_TransferSub(BillID, RowID, Flag, ProductID, ColorID,Qty,Price,Amount)
      values(@BillID,@RowID,@Flag,@ProductID,@ColorID,@Qty,@Price,@Amount)
    </CommandString>
  </Command>
  <Command ID="UpdateTransferSaleCheck">
    <CommandString>
      update WMS_Transfer set Checker=@UserName,CheckDate={0} where Flag=5 and BillID =@BillID
    </CommandString>
  </Command>

  <Command ID="spCheckTransferInStock">
    <CommandString>
      sp_CheckTransferInStock
    </CommandString>
  </Command>
  <Command ID="SelectBarCodeTable">
    <CommandString>
      select  ROW_NUMBER() over(order by barcode) as RowID,* from  View_TmpBarCode where barcode like @BarCode
      order by barcode
    </CommandString>
  </Command>
  
  <Command ID="SelectBarCodeQuery">
    <CommandString>
      select '采购单号：'+a.ScheduleNo as Billid,'供应商：'+c.FactoryName as Style, case when State=0 then '下单' when State=1 then '组盘' when State=2 then '关闭' end as BarState from WMS_Barcode a inner join WMS_SCHEDULE b on a.ScheduleNo=b.ScheduleNo left join CMD_Factory c on b.FactoryID=c.FactoryID
      where BarCode=@BarCode
      union all
      select '采购单号：'+a.ScheduleNo as Billid,'供应商：'+c.FactoryName as Style, case when State=0 then '下单' when State=1 then '入库' when State=2 then '关闭' end as BarState from WMS_Barcode_Bak a inner join WMS_SCHEDULE b on a.ScheduleNo=b.ScheduleNo left join CMD_Factory c on b.FactoryID=c.FactoryID
      where BarCode=@BarCode
      union all
      select '入库单号：'+a.BillID as Billid,'托盘：'+ isnull(b.PalletCode,'') as Style, '库区：'+isnull(d.AREA_NAME,'')+' 货位：'+isnull(c.CELL_NAME,'')  as BarState from WMS_StockDetail a left join WMS_PalletSub b on a.BarCode=b.Barcode left join CMD_WH_CELL c on b.PalletCode=c.PALLET_CODE left join CMD_WH_AREA d on c.AREA_CODE=d.AREA_CODE
      where a.Flag=1 and a.BarCode=@BarCode
      union all
      select '出库单号：'+a.BillID as Billid,'经销商：'+ isnull(d.CUSTOMER_NAME,'') as Style, '子公司：'+isnull(e.CUSTOMER_NAME,'') as BarState from WMS_StockDetail a inner join   WMS_Stock b on a.BillID=b.BillID left join WMS_DeliverSchedule  c on b.ScheduleNo=c.ScheduleNo left join CMD_CUSTOMER d on c.CustomerID=d.CUSTOMER_CODE left join CMD_CUSTOMER e on c.ParCustomerID=e.CUSTOMER_CODE
      where a.Flag=2 and a.BarCode=@BarCode
      union all
      select '出库单号：'+a.BillID as Billid,'经销商：'+ isnull(d.CUSTOMER_NAME,'') as Style, '子公司：'+isnull(e.CUSTOMER_NAME,'') as BarState from WMS_TransferDetail a inner join   WMS_Transfer b on a.BillID=b.BillID left join CMD_CUSTOMER d on b.CustomerID=d.CUSTOMER_CODE left join CMD_CUSTOMER e on b.TranCustomerID=e.CUSTOMER_CODE
      where a.Flag=3 and a.BarCode=@BarCode
      union all
      select '序号变更单：'+a.BillID as Billid,'经销商：'+ isnull(d.CUSTOMER_NAME,'') as Style, '变更经销商：'+isnull(e.CUSTOMER_NAME,'') as BarState from WMS_TransferDetail a inner join   WMS_Transfer b on a.BillID=b.BillID left join CMD_CUSTOMER d on b.CustomerID=d.CUSTOMER_CODE left join CMD_CUSTOMER e on b.TranCustomerID=e.CUSTOMER_CODE
      where a.Flag=1 and a.BarCode=@BarCode
      union all
      select '销售退货单：'+a.BillID as Billid,'经销商：'+ isnull(d.CUSTOMER_NAME,'') as Style, '子公司：'+isnull(e.CUSTOMER_NAME,'') as BarState from WMS_TransferDetail a inner join   WMS_Transfer b on a.BillID=b.BillID left join CMD_CUSTOMER d on b.CustomerID=d.CUSTOMER_CODE left join CMD_CUSTOMER e on b.TranCustomerID=e.CUSTOMER_CODE
      where a.Flag=2 and a.BarCode=@BarCode
      union all
      select '入库退货单：'+a.BillID as Billid,'不良品区' as Style, '供应商：'+isnull(d.FactoryName,'') as BarState from WMS_TransferDetail a inner join   WMS_Transfer b on a.BillID=b.BillID left join CMD_Factory d on b.CustomerID=d.FactoryID
      where a.Flag=4 and a.BarCode=@BarCode
      union all
      select '调拨单：'+a.BillID as Billid,'调入仓库：'+d.WAREHOUSE_NAME as Style, '' as BarState from WMS_MigrationDetail a inner join   WMS_Migration b on a.BillID=b.BillID left join CMD_WAREHOUSE d on b.StockFunction=d.CMD_WAREHOUSE_ID
      where a.Flag=2 and a.BarCode=@BarCode
      union all
      select '调拨销售单：'+a.BillID as Billid, '经销商：'+ isnull(d.CUSTOMER_NAME,'') as Style, '子公司：'+isnull(e.CUSTOMER_NAME,'') as BarState from WMS_TransferDetail a inner join   WMS_Transfer b on a.BillID=b.BillID left join CMD_CUSTOMER d on b.CustomerID=d.CUSTOMER_CODE left join CMD_CUSTOMER e on b.TranCustomerID=e.CUSTOMER_CODE
      where a.Flag=5 and a.BarCode=@BarCode
      union all
      select '调拨入库单：'+a.BillID as Billid,'调出仓库：'+ isnull(d.WAREHOUSE_NAME,'') as Style, '' as BarState from WMS_TransferDetail a inner join   WMS_Transfer b on a.BillID=b.BillID left join CMD_WAREHOUSE d on b.OutStockID=cast(d.CMD_WAREHOUSE_ID as varchar)
      where a.Flag=6 and a.BarCode=@BarCode
      union all
      select '移入移出单：'+a.BillID as Billid,'移入区域：'+ case when StockFunction=0 then '存储区' when StockFunction=1 then '出库周转区'  when StockFunction=2 then '展览区' when StockFunction=3 then '不良品区' end as Style, (case when OutStockType=1 then '正常出库' else '批次移库' end ) as BarState from WMS_MigrationDetail a inner join   WMS_Migration b on a.BillID=b.BillID
      where a.Flag=1   and a.BarCode=@BarCode
    </CommandString>
  </Command>
 

</SqlCommand>